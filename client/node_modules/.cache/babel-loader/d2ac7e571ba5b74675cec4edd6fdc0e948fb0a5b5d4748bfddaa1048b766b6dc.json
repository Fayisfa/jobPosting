{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\mainProject\\\\jobPosting\\\\client\\\\src\\\\pages\\\\ShowJob.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowJob = () => {\n  _s();\n  const [college, setCollege] = useState('');\n  const [colleges, setColleges] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    async function fetchColleges() {\n      try {\n        const response = await fetch(`http://localhost:5000/get-colleges`);\n        const data = await response.json();\n        setColleges(data);\n        if (data.length > 0) {\n          setCollege(data[0].college_name); // Select the first college by default\n        }\n      } catch (error) {\n        console.error(\"Error fetching colleges:\", error);\n      }\n    }\n    fetchColleges();\n  }, []);\n  useEffect(() => {\n    if (!college) return; // Avoid fetching if college is not set\n\n    async function fetchJobs() {\n      try {\n        const response = await fetch(`http://localhost:5000/jobs-count?collegeName=${college}`);\n        const data = await response.json();\n        setJobs(data);\n        console.log(response); // Check the response status\n        console.log(data); // Check the data format\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n    fetchJobs();\n  }, [college]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mt-5\",\n      children: \"Job Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"college\",\n        className: \"form-label\",\n        children: \"College:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"college\",\n        className: \"form-select\",\n        value: college,\n        onChange: e => setCollege(e.target.value),\n        children: colleges.map((c, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.college_name,\n          children: c.college_name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.job_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.department_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.job_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ShowJob, \"7fSofNFEiVcvfqaxPV+5YUMcSj4=\");\n_c = ShowJob;\nexport default ShowJob;\nvar _c;\n$RefreshReg$(_c, \"ShowJob\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Table","jsxDEV","_jsxDEV","ShowJob","_s","college","setCollege","colleges","setColleges","jobs","setJobs","fetchColleges","response","fetch","data","json","length","college_name","error","console","fetchJobs","log","err","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","c","index","striped","bordered","hover","job","job_title","department_name","job_count","_c","$RefreshReg$"],"sources":["C:/Programming/mainProject/jobPosting/client/src/pages/ShowJob.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst ShowJob = () => {\r\n    const [college, setCollege] = useState('');\r\n    const [colleges, setColleges] = useState([]);\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchColleges() {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/get-colleges`);\r\n                const data = await response.json();\r\n                setColleges(data);\r\n                if (data.length > 0) {\r\n                    setCollege(data[0].college_name); // Select the first college by default\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching colleges:\", error);\r\n            }\r\n        }\r\n        fetchColleges();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!college) return; // Avoid fetching if college is not set\r\n\r\n        async function fetchJobs() {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/jobs-count?collegeName=${college}`);\r\n                const data = await response.json();\r\n                setJobs(data);\r\n                console.log(response); // Check the response status\r\n                console.log(data); // Check the data format\r\n            } catch (err) {\r\n                console.error(err.message);\r\n            }            \r\n        }\r\n        fetchJobs();\r\n    }, [college]);\r\n\r\n    return (\r\n        <Fragment>\r\n        \r\n            <h1 className=\"text-center mt-5\">Job Posts</h1>\r\n            <div className=\"mb-3 text-center mt-3\">\r\n                <label htmlFor=\"college\" className=\"form-label\">College:</label>\r\n                <select id=\"college\" className=\"form-select\" value={college} onChange={(e) => setCollege(e.target.value)}>\r\n                    {colleges.map((c, index) => (\r\n                        <option key={index} value={c.college_name}>{c.college_name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <Table striped bordered hover className=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Job Title</th>\r\n                        <th>Department</th>\r\n                        <th>Count</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map((job, index) => (\r\n                        <tr key={index}>\r\n                            <td>{job.job_title}</td>\r\n                            <td>{job.department_name}</td>\r\n                            <td>{job.job_count}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ShowJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}