{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\mainProject\\\\jobPosting\\\\client\\\\src\\\\pages\\\\AddCollegeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCollegeForm = ({\n  onSuccess\n}) => {\n  _s();\n  const [collegeName, setCollegeName] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [establishedYear, setEstablishedYear] = useState(\"\");\n  const [districts, setDistricts] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:5000/addcollege\", {\n        college_name: collegeName,\n        state,\n        district,\n        established_year: establishedYear\n      });\n      alert(\"College added successfully\");\n\n      // Trigger the success callback to refresh the table\n      if (onSuccess) onSuccess();\n\n      // Optionally, clear the form\n      setCollegeName(\"\");\n      setState(\"\");\n      setDistrict(\"\");\n      setEstablishedYear(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    async function fetchDistricts() {\n      try {\n        const response = await fetch(`http://localhost:5000/districts?state=${state}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        console.log(data);\n        setDistricts(data);\n\n        // Set first district by default only if districts exist\n        if (data.length > 0) {\n          setDistrict(data[0].district);\n        } else {\n          setDistrict(\"\"); // Clear the district selection if no data\n        }\n      } catch (error) {\n        console.error(\"Error fetching districts:\", error);\n      }\n    }\n    if (state) {\n      // Fetch districts only if state is selected\n      fetchDistricts();\n    } else {\n      setDistricts([]); // Clear the districts if no state is selected\n      setDistrict(\"\");\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New College\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"College Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: collegeName,\n        onChange: e => setCollegeName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"state\",\n        className: \"form-label\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"state\",\n        className: \"form-select\",\n        value: state,\n        onChange: e => setState(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Kerala\",\n          children: \"Kerala\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"district\",\n        className: \"form-label\",\n        children: \"District:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"district\",\n        className: \"form-select\",\n        value: district,\n        onChange: e => setDistrict(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a District\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 45\n        }, this), districts.map((d, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d.district,\n          children: d.district\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 49\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Established Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: establishedYear,\n        onChange: e => setEstablishedYear(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success mt-3\",\n      children: \"Add College\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCollegeForm, \"wnbag5r+EYJlNllQ024r+cVNP2I=\");\n_c = AddCollegeForm;\nexport default AddCollegeForm;\nvar _c;\n$RefreshReg$(_c, \"AddCollegeForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AddCollegeForm","onSuccess","_s","collegeName","setCollegeName","state","setState","district","setDistrict","establishedYear","setEstablishedYear","districts","setDistricts","handleSubmit","e","preventDefault","post","college_name","established_year","alert","error","console","fetchDistricts","response","fetch","method","data","json","log","length","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","target","required","htmlFor","id","map","d","index","_c","$RefreshReg$"],"sources":["C:/Programming/mainProject/jobPosting/client/src/pages/AddCollegeForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AddCollegeForm = ({ onSuccess }) => {\r\n  const [collegeName, setCollegeName] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [establishedYear, setEstablishedYear] = useState(\"\");\r\n\r\n  const [districts, setDistricts] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:5000/addcollege\", {\r\n        college_name: collegeName,\r\n        state,\r\n        district,\r\n        established_year: establishedYear,\r\n      });\r\n      alert(\"College added successfully\");\r\n\r\n      // Trigger the success callback to refresh the table\r\n      if (onSuccess) onSuccess();\r\n\r\n      // Optionally, clear the form\r\n      setCollegeName(\"\");\r\n      setState(\"\");\r\n      setDistrict(\"\");\r\n      setEstablishedYear(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n    useEffect(() => {\r\n   async function fetchDistricts() {\r\n       try {\r\n           const response = await fetch(`http://localhost:5000/districts?state=${state}`, {\r\n               method: 'GET',\r\n           });\r\n           const data = await response.json();\r\n           console.log(data);\r\n           setDistricts(data);\r\n\r\n           // Set first district by default only if districts exist\r\n           if (data.length > 0) {\r\n               setDistrict(data[0].district);\r\n           } else {\r\n               setDistrict(\"\"); // Clear the district selection if no data\r\n           }\r\n       } catch (error) {\r\n           console.error(\"Error fetching districts:\", error);\r\n       }\r\n   }\r\n\r\n   if (state) {  // Fetch districts only if state is selected\r\n       fetchDistricts();\r\n   } else {\r\n       setDistricts([]); // Clear the districts if no state is selected\r\n       setDistrict(\"\");\r\n   }\r\n}, [state]);\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Add New College</h3>\r\n      <div className=\"form-group\">\r\n        <label>College Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={collegeName}\r\n          onChange={(e) => setCollegeName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"mb-3\">\r\n                                        <label htmlFor=\"state\" className=\"form-label\">State</label>\r\n                                        <select\r\n                                            id=\"state\"\r\n                                            className=\"form-select\"\r\n                                            value={state}\r\n                                            onChange={(e) => setState(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Kerala\">Kerala</option>\r\n                                        </select>\r\n                                    </div>\r\n      \r\n      <div className=\"mb-3\">\r\n                                        <label htmlFor=\"district\" className=\"form-label\">District:</label>\r\n                                        <select\r\n                                            id=\"district\"\r\n                                            className=\"form-select\"\r\n                                            value={district}\r\n                                            onChange={(e) => setDistrict(e.target.value)}\r\n                                        >\r\n                                            <option value=\"\">Select a District</option>\r\n                                            {districts.map((d, index) => (\r\n                                                <option key={index} value={d.district}>{d.district}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n      <div className=\"form-group\">\r\n        <label>Established Year</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          value={establishedYear}\r\n          onChange={(e) => setEstablishedYear(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-success mt-3\">\r\n        Add College\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCollegeForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}