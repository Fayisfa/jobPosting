{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\mainProject\\\\jobPosting\\\\client\\\\src\\\\components\\\\JobForm.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobForm = () => {\n  _s();\n  // State for form fields\n  const [state, setState] = useState('Kerala'); // default state\n  const [district, setDistrict] = useState('');\n  const [college, setCollege] = useState('');\n  const [departmentId, setDepartmentId] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [orderNo, setOrderNo] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [eligibility, setEligibility] = useState('');\n\n  // State for dropdown options\n  const [districts, setDistricts] = useState([]);\n  const [colleges, setColleges] = useState([]);\n  const [departments, setDepartments] = useState([]);\n\n  // Fetch districts when the state changes\n  useEffect(() => {\n    async function fetchDistricts() {\n      try {\n        const response = await fetch(`http://localhost:5000/districts?state=${state}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        console.log(data);\n        setDistricts(data);\n        if (data.length > 0) {\n          setDistrict(data[0].district); // Select the first district by default\n        }\n      } catch (error) {\n        console.error(\"Error fetching districts:\", error);\n      }\n    }\n    fetchDistricts();\n  }, [state]);\n\n  // Fetch colleges when the district changes\n  useEffect(() => {\n    if (!district) return;\n    async function fetchColleges() {\n      try {\n        const response = await fetch(`http://localhost:5000/colleges?district=${district}`);\n        const data = await response.json();\n        setColleges(data);\n        if (data.length > 0) {\n          setCollege(data[0].college_name); // Select the first college by default\n        }\n      } catch (error) {\n        console.error(\"Error fetching colleges:\", error);\n      }\n    }\n    fetchColleges();\n  }, [district]);\n\n  // Fetch departments when the college changes\n  useEffect(() => {\n    if (!college) return;\n    async function fetchDepartments() {\n      try {\n        const response = await fetch(`http://localhost:5000/departments?college=${college}`);\n        const data = await response.json();\n        setDepartments(data);\n        if (data.length > 0) {\n          setDepartmentId(data[0].department_id); // Select the first department by default\n        }\n      } catch (error) {\n        console.error(\"Error fetching departments:\", error);\n      }\n    }\n    fetchDepartments();\n  }, [college]);\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = {\n      jobTitle,\n      jobDescription,\n      eligibility,\n      collegeName: college,\n      // Renamed to match the server's expected field\n      depName: departmentId,\n      orderNo\n    };\n    console.log(departmentId);\n    try {\n      const response = await fetch('http://localhost:5000/jobpost', {\n        // Ensure this matches your backend\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        alert(result.message || 'Job post added successfully!');\n        // Reset form fields if needed\n        setJobTitle('');\n        setJobDescription('');\n        setEligibility('');\n        setOrderNo('');\n        setDistrict('');\n        setCollege('');\n        setDepartmentId('');\n      } else {\n        const error = await response.json();\n        alert(`Error: ${error.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error posting job:\", error);\n      alert(\"Error posting job. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          md: \"8\",\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(MDBCard, {\n            children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center mb-4\",\n                children: \"New Job Posting Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"order_no\",\n                      className: \"form-label\",\n                      children: \"Order No:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      type: \"text\",\n                      id: \"order_no\",\n                      value: orderNo,\n                      onChange: e => setOrderNo(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"state\",\n                      className: \"form-label\",\n                      children: \"State:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"state\",\n                      className: \"form-select\",\n                      value: state,\n                      onChange: e => setState(e.target.value),\n                      children: /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Kerala\",\n                        children: \"Kerala\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"district\",\n                      className: \"form-label\",\n                      children: \"District:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"district\",\n                      className: \"form-select\",\n                      value: district,\n                      onChange: e => setDistrict(e.target.value),\n                      children: districts.map((d, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: d.district,\n                        children: d.district\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"college\",\n                      className: \"form-label\",\n                      children: \"College:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"college\",\n                      className: \"form-select\",\n                      value: college,\n                      onChange: e => setCollege(e.target.value),\n                      children: colleges.map((c, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: c.college_name,\n                        children: c.college_name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"department_id\",\n                      className: \"form-label\",\n                      children: \"Department:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"department_id\",\n                      className: \"form-select\",\n                      value: departmentId,\n                      onChange: e => setDepartmentId(e.target.value),\n                      children: departments.map((d, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: d.department_id,\n                        children: d.department_name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"job_title\",\n                      className: \"form-label\",\n                      children: \"Job Title:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"job_title\",\n                      className: \"form-select\",\n                      value: jobTitle,\n                      onChange: e => setJobTitle(e.target.value),\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select a Job Title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Associate Professor\",\n                        children: \"Associate Professor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Assistant Librarian\",\n                        children: \"Assistant Librarian\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Lab Assistant\",\n                        children: \"Lab Assistant\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Workshop Instructor\",\n                        children: \"Workshop Instructor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Technical Assistant\",\n                        children: \"Technical Assistant\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Librarian\",\n                        children: \"Librarian\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Research Associate\",\n                        children: \"Research Associate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Lecturer\",\n                        children: \"Lecturer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Senior Lecturer\",\n                        children: \"Senior Lecturer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Assistant Professor\",\n                        children: \"Assistant Professor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Lab Technician\",\n                        children: \"Lab Technician\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Professor\",\n                        children: \"Professor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"job_description\",\n                      className: \"form-label\",\n                      children: \"Job Description:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      type: \"textarea\",\n                      id: \"job_description\",\n                      value: jobDescription,\n                      onChange: e => setJobDescription(e.target.value),\n                      rows: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"eligibility\",\n                      className: \"form-label\",\n                      children: \"Eligibility:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                      type: \"textarea\",\n                      id: \"eligibility\",\n                      value: eligibility,\n                      onChange: e => setEligibility(e.target.value),\n                      rows: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  type: \"submit\",\n                  color: \"primary\",\n                  block: true,\n                  children: \"Add Job Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(JobForm, \"KqKba8jwHSm1rkASleI2VOt3P8I=\");\n_c = JobForm;\nexport default JobForm;\nvar _c;\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBInput","MDBBtn","jsxDEV","_jsxDEV","JobForm","_s","state","setState","district","setDistrict","college","setCollege","departmentId","setDepartmentId","jobTitle","setJobTitle","orderNo","setOrderNo","jobDescription","setJobDescription","eligibility","setEligibility","districts","setDistricts","colleges","setColleges","departments","setDepartments","fetchDistricts","response","fetch","method","data","json","console","log","length","error","fetchColleges","college_name","fetchDepartments","department_id","handleSubmit","event","preventDefault","formData","collegeName","depName","headers","body","JSON","stringify","ok","result","alert","message","children","className","md","lg","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","map","d","index","c","department_name","rows","color","block","_c","$RefreshReg$"],"sources":["C:/Programming/mainProject/jobPosting/client/src/components/JobForm.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn } from 'mdb-react-ui-kit';\r\n\r\nconst JobForm = () => {\r\n    // State for form fields\r\n    const [state, setState] = useState('Kerala'); // default state\r\n    const [district, setDistrict] = useState('');\r\n    const [college, setCollege] = useState('');\r\n    const [departmentId, setDepartmentId] = useState('');\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [orderNo, setOrderNo] = useState('');\r\n    const [jobDescription, setJobDescription] = useState('');\r\n    const [eligibility, setEligibility] = useState('');\r\n\r\n    // State for dropdown options\r\n    const [districts, setDistricts] = useState([]);\r\n    const [colleges, setColleges] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n\r\n    // Fetch districts when the state changes\r\n    useEffect(() => {\r\n         async function fetchDistricts() {\r\n             try {\r\n                 const response = await fetch(`http://localhost:5000/districts?state=${state}`,{\r\n                    method: 'GET',\r\n                 });\r\n                 const data = await response.json();\r\n                 console.log(data);\r\n                 setDistricts(data);\r\n                 if (data.length > 0) {\r\n                     setDistrict(data[0].district); // Select the first district by default\r\n                 }\r\n             } catch (error) {\r\n                 console.error(\"Error fetching districts:\", error);\r\n             }\r\n         }\r\n         fetchDistricts();\r\n     }, [state]);\r\n\r\n    // Fetch colleges when the district changes\r\n    useEffect(() => {\r\n        if (!district) return;\r\n        async function fetchColleges() {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/colleges?district=${district}`);\r\n                const data = await response.json();\r\n                setColleges(data);\r\n                if (data.length > 0) {\r\n                    setCollege(data[0].college_name); // Select the first college by default\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching colleges:\", error);\r\n            }\r\n        }\r\n        fetchColleges();\r\n    }, [district]);\r\n\r\n    // Fetch departments when the college changes\r\n    useEffect(() => {\r\n        if (!college) return;\r\n        async function fetchDepartments() {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/departments?college=${college}`);\r\n                const data = await response.json();\r\n                setDepartments(data);\r\n                if (data.length > 0) {\r\n                    setDepartmentId(data[0].department_id); // Select the first department by default\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching departments:\", error);\r\n            }\r\n        }\r\n        fetchDepartments();\r\n    }, [college]);\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {\r\n            jobTitle, \r\n            jobDescription,\r\n            eligibility,\r\n            collegeName: college,  // Renamed to match the server's expected field\r\n            depName: departmentId,\r\n            orderNo\r\n    };\r\n    console.log(departmentId);\r\n    try {\r\n        const response = await fetch('http://localhost:5000/jobpost', { // Ensure this matches your backend\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(formData),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const result = await response.json();\r\n            alert(result.message || 'Job post added successfully!');\r\n            // Reset form fields if needed\r\n            setJobTitle('');\r\n            setJobDescription('');\r\n            setEligibility('');\r\n            setOrderNo('');\r\n            setDistrict('');\r\n            setCollege('');\r\n            setDepartmentId('');\r\n        } else {\r\n            const error = await response.json();\r\n            alert(`Error: ${error.message}`);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error posting job:\", error);\r\n        alert(\"Error posting job. Please try again.\");\r\n    }\r\n};\r\n\r\n    return (\r\n        <Fragment>\r\n            <MDBContainer className=\"mt-5\">\r\n                <MDBRow className=\"justify-content-center\">\r\n                    <MDBCol md=\"8\" lg=\"6\">\r\n                        <MDBCard>\r\n                            <MDBCardBody>\r\n                                <h1 className=\"text-center mb-4\">New Job Posting Form</h1>\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"order_no\" className=\"form-label\">Order No:</label>\r\n                                            <MDBInput\r\n                                                type=\"text\"\r\n                                                id=\"order_no\"\r\n                                                value={orderNo}\r\n                                                onChange={(e) => setOrderNo(e.target.value)}\r\n                                                required\r\n                                            />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"state\" className=\"form-label\">State:</label>\r\n                                            <select id=\"state\" className=\"form-select\" value={state} onChange={(e) => setState(e.target.value)}>\r\n                                                <option value=\"Kerala\">Kerala</option>\r\n                                            </select>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"district\" className=\"form-label\">District:</label>\r\n                                            <select id=\"district\" className=\"form-select\" value={district} onChange={(e) => setDistrict(e.target.value)}>\r\n                                                {districts.map((d, index) => (\r\n                                                    <option key={index} value={d.district}>{d.district}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"college\" className=\"form-label\">College:</label>\r\n                                            <select id=\"college\" className=\"form-select\" value={college} onChange={(e) => setCollege(e.target.value)}>\r\n                                                {colleges.map((c, index) => (\r\n                                                    <option key={index} value={c.college_name}>{c.college_name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"department_id\" className=\"form-label\">Department:</label>\r\n                                            <select id=\"department_id\" className=\"form-select\" value={departmentId} onChange={(e) => setDepartmentId(e.target.value)}>\r\n                                                {departments.map((d, index) => (\r\n                                                    <option key={index} value={d.department_id}>{d.department_name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"job_title\" className=\"form-label\">Job Title:</label>\r\n                                            <select\r\n                                                id=\"job_title\"\r\n                                                className=\"form-select\"\r\n                                                value={jobTitle}\r\n                                                onChange={(e) => setJobTitle(e.target.value)}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select a Job Title</option>\r\n                                                <option value=\"Associate Professor\">Associate Professor</option>\r\n                                                <option value=\"Assistant Librarian\">Assistant Librarian</option>\r\n                                                <option value=\"Lab Assistant\">Lab Assistant</option>\r\n                                                <option value=\"Workshop Instructor\">Workshop Instructor</option>\r\n                                                <option value=\"Technical Assistant\">Technical Assistant</option>\r\n                                                <option value=\"Librarian\">Librarian</option>\r\n                                                <option value=\"Research Associate\">Research Associate</option>\r\n                                                <option value=\"Lecturer\">Lecturer</option>\r\n                                                <option value=\"Senior Lecturer\">Senior Lecturer</option>\r\n                                                <option value=\"Assistant Professor\">Assistant Professor</option>\r\n                                                <option value=\"Lab Technician\">Lab Technician</option>\r\n                                                <option value=\"Professor\">Professor</option>\r\n                                            </select>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"job_description\" className=\"form-label\">Job Description:</label>\r\n                                            <MDBInput\r\n                                                type=\"textarea\"\r\n                                                id=\"job_description\"\r\n                                                value={jobDescription}\r\n                                                onChange={(e) => setJobDescription(e.target.value)}\r\n                                                rows=\"3\"\r\n                                            />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBRow className=\"mb-3\">\r\n                                        <MDBCol md=\"6\">\r\n                                            <label htmlFor=\"eligibility\" className=\"form-label\">Eligibility:</label>\r\n                                            <MDBInput\r\n                                                type=\"textarea\"\r\n                                                id=\"eligibility\"\r\n                                                value={eligibility}\r\n                                                onChange={(e) => setEligibility(e.target.value)}\r\n                                                rows=\"3\"\r\n                                            />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBBtn type=\"submit\" color=\"primary\" block>\r\n                                        Add Job Post\r\n                                    </MDBBtn>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default JobForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}