{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\mainProject\\\\jobPosting\\\\client\\\\src\\\\components\\\\JobForm.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobForm = () => {\n  _s();\n  // State for form fields\n  const [state, setState] = useState('Kerala'); // default state\n  const [district, setDistrict] = useState('');\n  const [college, setCollege] = useState('');\n  const [departmentId, setDepartmentId] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [orderNo, setOrderNo] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [eligibility, setEligibility] = useState('');\n\n  // State for dropdown options\n  const [districts, setDistricts] = useState([]);\n  const [colleges, setColleges] = useState([]);\n  const [departments, setDepartments] = useState([]);\n\n  // Fetch districts when the state changes\n  useEffect(() => {\n    async function fetchDistricts() {\n      try {\n        const response = await fetch(`http://localhost:5000/districts?state=${state}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        console.log(data);\n        setDistricts(data);\n        if (data.length > 0) {\n          setDistrict(data[0].district); // Select the first district by default\n        }\n      } catch (error) {\n        console.error(\"Error fetching districts:\", error);\n      }\n    }\n    fetchDistricts();\n  }, [state]);\n\n  // // Fetch colleges when the district changes\n  useEffect(() => {\n    if (!district) return;\n    async function fetchColleges() {\n      try {\n        const response = await fetch(`http://localhost:5000/colleges?district=${district}`);\n        const data = await response.json();\n        setColleges(data);\n        if (data.length > 0) {\n          setCollege(data[0].college_name); // Select the first college by default\n        }\n      } catch (error) {\n        console.error(\"Error fetching colleges:\", error);\n      }\n    }\n    fetchColleges();\n  }, [district]);\n\n  // // Fetch departments when the college changes\n  useEffect(() => {\n    if (!college) return;\n    async function fetchDepartments() {\n      try {\n        const response = await fetch(`http://localhost:5000/departments?college=${college}`);\n        const data = await response.json();\n        setDepartments(data);\n        if (data.length > 0) {\n          setDepartmentId(data[0].department_id); // Select the first department by default\n        }\n      } catch (error) {\n        console.error(\"Error fetching departments:\", error);\n      }\n    }\n    fetchDepartments();\n  }, [college]);\n\n  // // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = {\n      jobTitle,\n      jobDescription,\n      eligibility,\n      collegeName: college,\n      // Renamed to match the server's expected field\n      depName: departmentId,\n      orderNo\n    };\n    console.log(departmentId);\n    try {\n      const response = await fetch('http://localhost:5000/jobpost', {\n        // Ensure this matches your backend\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        alert(result.message || 'Job post added successfully!');\n        // Reset form fields if needed\n        setJobTitle('');\n        setJobDescription('');\n        setEligibility('');\n        setOrderNo('');\n        setDistrict('');\n        setCollege('');\n        setDepartmentId('');\n      } else {\n        const error = await response.json();\n        alert(`Error: ${error.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error posting job:\", error);\n      alert(\"Error posting job. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: \"New Job Posting Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"order_no\",\n          className: \"form-label\",\n          children: \"Order No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"order_no\",\n          className: \"form-control\",\n          value: orderNo,\n          onChange: e => setOrderNo(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          className: \"form-label\",\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"state\",\n          className: \"form-select\",\n          value: state,\n          onChange: e => setState(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Kerala\",\n            children: \"Kerala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"district\",\n          className: \"form-label\",\n          children: \"District:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"district\",\n          className: \"form-select\",\n          value: district,\n          onChange: e => setDistrict(e.target.value),\n          children: districts.map((d, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.district,\n            children: d.district\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"college\",\n          className: \"form-label\",\n          children: \"College:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"college\",\n          className: \"form-select\",\n          value: college,\n          onChange: e => setCollege(e.target.value),\n          children: colleges.map((c, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c.college_name,\n            children: c.college_name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department_id\",\n          className: \"form-label\",\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"department_id\",\n          className: \"form-select\",\n          value: departmentId,\n          onChange: e => setDepartmentId(e.target.value),\n          children: departments.map((d, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.department_name,\n            children: d.department_name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"job_title\",\n          className: \"form-label\",\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"job_title\",\n          className: \"form-select\",\n          value: jobTitle,\n          onChange: e => setJobTitle(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Associate Professor\",\n            children: \"Associate Professor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Assistant Librarian\",\n            children: \"Assistant Librarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lab Assistant\",\n            children: \"Lab Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Workshop Instructor\",\n            children: \"Workshop Instructor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Technical Assistant\",\n            children: \"Technical Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Librarian\",\n            children: \"Librarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Research Associate\",\n            children: \"Research Associate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lecturer\",\n            children: \"Lecturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Senior Lecturer\",\n            children: \"Senior Lecturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Assistant Professor\",\n            children: \"Assistant Professor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lab Technician\",\n            children: \"Lab Technician\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Professor\",\n            children: \"Professor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"job_description\",\n          className: \"form-label\",\n          children: \"Job Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"job_description\",\n          className: \"form-control\",\n          value: jobDescription,\n          onChange: e => setJobDescription(e.target.value),\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eligibility\",\n          className: \"form-label\",\n          children: \"Eligibility:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"eligibility\",\n          className: \"form-control\",\n          value: eligibility,\n          onChange: e => setEligibility(e.target.value),\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add Job Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(JobForm, \"KqKba8jwHSm1rkASleI2VOt3P8I=\");\n_c = JobForm;\nexport default JobForm;\nvar _c;\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","jsxDEV","_jsxDEV","JobForm","_s","state","setState","district","setDistrict","college","setCollege","departmentId","setDepartmentId","jobTitle","setJobTitle","orderNo","setOrderNo","jobDescription","setJobDescription","eligibility","setEligibility","districts","setDistricts","colleges","setColleges","departments","setDepartments","fetchDistricts","response","fetch","method","data","json","console","log","length","error","fetchColleges","college_name","fetchDepartments","department_id","handleSubmit","event","preventDefault","formData","collegeName","depName","headers","body","JSON","stringify","ok","result","alert","message","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","required","map","d","index","c","department_name","rows","_c","$RefreshReg$"],"sources":["C:/Programming/mainProject/jobPosting/client/src/components/JobForm.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nconst JobForm = () => {\r\n    // State for form fields\r\n    const [state, setState] = useState('Kerala'); // default state\r\n    const [district, setDistrict] = useState('');\r\n    const [college, setCollege] = useState('');\r\n    const [departmentId, setDepartmentId] = useState('');\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [orderNo, setOrderNo] = useState('');\r\n    const [jobDescription, setJobDescription] = useState('');\r\n    const [eligibility, setEligibility] = useState('');\r\n\r\n    // State for dropdown options\r\n    const [districts, setDistricts] = useState([]);\r\n    const [colleges, setColleges] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n\r\n    // Fetch districts when the state changes\r\n    useEffect(() => {\r\n         async function fetchDistricts() {\r\n             try {\r\n                 const response = await fetch(`http://localhost:5000/districts?state=${state}`,{\r\n                    method: 'GET',\r\n                 });\r\n                 const data = await response.json();\r\n                 console.log(data);\r\n                 setDistricts(data);\r\n                 if (data.length > 0) {\r\n                     setDistrict(data[0].district); // Select the first district by default\r\n                 }\r\n             } catch (error) {\r\n                 console.error(\"Error fetching districts:\", error);\r\n             }\r\n         }\r\n         fetchDistricts();\r\n     }, [state]);\r\n\r\n    // // Fetch colleges when the district changes\r\n    useEffect(() => {\r\n        if (!district) return;\r\n        async function fetchColleges() {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/colleges?district=${district}`);\r\n                const data = await response.json();\r\n                setColleges(data);\r\n                if (data.length > 0) {\r\n                    setCollege(data[0].college_name); // Select the first college by default\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching colleges:\", error);\r\n            }\r\n        }\r\n        fetchColleges();\r\n    }, [district]);\r\n\r\n    // // Fetch departments when the college changes\r\n    useEffect(() => {\r\n        if (!college) return;\r\n        async function fetchDepartments() {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/departments?college=${college}`);\r\n                const data = await response.json();\r\n                setDepartments(data);\r\n                if (data.length > 0) {\r\n                    setDepartmentId(data[0].department_id); // Select the first department by default\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching departments:\", error);\r\n            }\r\n        }\r\n        fetchDepartments();\r\n    }, [college]);\r\n\r\n    // // Handle form submission\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {\r\n            jobTitle, \r\n            jobDescription,\r\n            eligibility,\r\n            collegeName: college,  // Renamed to match the server's expected field\r\n            depName: departmentId,\r\n            orderNo\r\n    };\r\n    console.log(departmentId);\r\n    try {\r\n        const response = await fetch('http://localhost:5000/jobpost', { // Ensure this matches your backend\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(formData),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const result = await response.json();\r\n            alert(result.message || 'Job post added successfully!');\r\n            // Reset form fields if needed\r\n            setJobTitle('');\r\n            setJobDescription('');\r\n            setEligibility('');\r\n            setOrderNo('');\r\n            setDistrict('');\r\n            setCollege('');\r\n            setDepartmentId('');\r\n        } else {\r\n            const error = await response.json();\r\n            alert(`Error: ${error.message}`);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error posting job:\", error);\r\n        alert(\"Error posting job. Please try again.\");\r\n    }\r\n};\r\n\r\n    return (\r\n        <Fragment>\r\n        \r\n            <form onSubmit={handleSubmit} className=\"container mt-4\">\r\n                <h1 className=\"text-center mt-5\">New Job Posting Form</h1>\r\n                <div className=\"mt-5 mb-3\">\r\n                    <label htmlFor=\"order_no\" className=\"form-label\">Order No:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"order_no\"\r\n                        className=\"form-control\"\r\n                        value={orderNo}\r\n                        onChange={(e) => setOrderNo(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"state\" className=\"form-label\">State:</label>\r\n                    <select id=\"state\" className=\"form-select\" value={state} onChange={(e) => setState(e.target.value)}>\r\n                        <option value=\"Kerala\">Kerala</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"district\" className=\"form-label\">District:</label>\r\n                    <select id=\"district\" className=\"form-select\" value={district} onChange={(e) => setDistrict(e.target.value)}>\r\n                        {districts.map((d, index) => (\r\n                            <option key={index} value={d.district}>{d.district}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"college\" className=\"form-label\">College:</label>\r\n                    <select id=\"college\" className=\"form-select\" value={college} onChange={(e) => setCollege(e.target.value)}>\r\n                        {colleges.map((c, index) => (\r\n                            <option key={index} value={c.college_name}>{c.college_name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"department_id\" className=\"form-label\">Department:</label>\r\n                    <select id=\"department_id\" className=\"form-select\" value={departmentId} onChange={(e) => setDepartmentId(e.target.value)}>\r\n                        {departments.map((d, index) => (\r\n                            <option key={index} value={d.department_name}>{d.department_name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n  <label htmlFor=\"job_title\" className=\"form-label\">Job Title:</label>\r\n  <select\r\n    id=\"job_title\"\r\n    className=\"form-select\"\r\n    value={jobTitle}\r\n    onChange={(e) => setJobTitle(e.target.value)}\r\n    required\r\n  >\r\n    <option value=\"\">Select a Job Title</option>\r\n    <option value=\"Associate Professor\">Associate Professor</option>\r\n    <option value=\"Assistant Librarian\">Assistant Librarian</option>\r\n    <option value=\"Lab Assistant\">Lab Assistant</option>\r\n    <option value=\"Workshop Instructor\">Workshop Instructor</option>\r\n    <option value=\"Technical Assistant\">Technical Assistant</option>\r\n    <option value=\"Librarian\">Librarian</option>\r\n    <option value=\"Research Associate\">Research Associate</option>\r\n    <option value=\"Lecturer\">Lecturer</option>\r\n    <option value=\"Senior Lecturer\">Senior Lecturer</option>\r\n    <option value=\"Assistant Professor\">Assistant Professor</option>\r\n    <option value=\"Lab Technician\">Lab Technician</option>\r\n    <option value=\"Professor\">Professor</option>\r\n  </select>\r\n</div>\r\n\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"job_description\" className=\"form-label\">Job Description:</label>\r\n                    <textarea\r\n                        id=\"job_description\"\r\n                        className=\"form-control\"\r\n                        value={jobDescription}\r\n                        onChange={(e) => setJobDescription(e.target.value)}\r\n                        rows=\"3\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"eligibility\" className=\"form-label\">Eligibility:</label>\r\n                    <textarea\r\n                        id=\"eligibility\"\r\n                        className=\"form-control\"\r\n                        value={eligibility}\r\n                        onChange={(e) => setEligibility(e.target.value)}\r\n                        rows=\"3\"\r\n                    />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Add Job Post</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default JobForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACX,eAAe2B,cAAcA,CAAA,EAAG;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCxB,KAAK,EAAE,EAAC;UAC3EyB,MAAM,EAAE;QACX,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBT,YAAY,CAACS,IAAI,CAAC;QAClB,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;UACjB3B,WAAW,CAACuB,IAAI,CAAC,CAAC,CAAC,CAACxB,QAAQ,CAAC,CAAC,CAAC;QACnC;MACJ,CAAC,CAAC,OAAO6B,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ;IACAT,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACtB,KAAK,CAAC,CAAC;;EAEZ;EACAL,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,QAAQ,EAAE;IACf,eAAe8B,aAAaA,CAAA,EAAG;MAC3B,IAAI;QACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2CtB,QAAQ,EAAE,CAAC;QACnF,MAAMwB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCR,WAAW,CAACO,IAAI,CAAC;QACjB,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;UACjBzB,UAAU,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACO,YAAY,CAAC,CAAC,CAAC;QACtC;MACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ;IACAC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAAC9B,QAAQ,CAAC,CAAC;;EAEd;EACAP,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,OAAO,EAAE;IACd,eAAe8B,gBAAgBA,CAAA,EAAG;MAC9B,IAAI;QACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CpB,OAAO,EAAE,CAAC;QACpF,MAAMsB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,cAAc,CAACK,IAAI,CAAC;QACpB,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;UACjBvB,eAAe,CAACmB,IAAI,CAAC,CAAC,CAAC,CAACS,aAAa,CAAC,CAAC,CAAC;QAC5C;MACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ;IACAG,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAAC9B,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMgC,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG;MACb/B,QAAQ;MACRI,cAAc;MACdE,WAAW;MACX0B,WAAW,EAAEpC,OAAO;MAAG;MACvBqC,OAAO,EAAEnC,YAAY;MACrBI;IACR,CAAC;IACDkB,OAAO,CAACC,GAAG,CAACvB,YAAY,CAAC;IACzB,IAAI;MACA,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAAE;QAC5DC,MAAM,EAAE,MAAM;QACdiB,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;MACjC,CAAC,CAAC;MAEF,IAAIhB,QAAQ,CAACuB,EAAE,EAAE;QACb,MAAMC,MAAM,GAAG,MAAMxB,QAAQ,CAACI,IAAI,CAAC,CAAC;QACpCqB,KAAK,CAACD,MAAM,CAACE,OAAO,IAAI,8BAA8B,CAAC;QACvD;QACAxC,WAAW,CAAC,EAAE,CAAC;QACfI,iBAAiB,CAAC,EAAE,CAAC;QACrBE,cAAc,CAAC,EAAE,CAAC;QAClBJ,UAAU,CAAC,EAAE,CAAC;QACdR,WAAW,CAAC,EAAE,CAAC;QACfE,UAAU,CAAC,EAAE,CAAC;QACdE,eAAe,CAAC,EAAE,CAAC;MACvB,CAAC,MAAM;QACH,MAAMwB,KAAK,GAAG,MAAMR,QAAQ,CAACI,IAAI,CAAC,CAAC;QACnCqB,KAAK,CAAC,UAAUjB,KAAK,CAACkB,OAAO,EAAE,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CiB,KAAK,CAAC,sCAAsC,CAAC;IACjD;EACJ,CAAC;EAEG,oBACInD,OAAA,CAACJ,QAAQ;IAAAyD,QAAA,eAELrD,OAAA;MAAMsD,QAAQ,EAAEf,YAAa;MAACgB,SAAS,EAAC,gBAAgB;MAAAF,QAAA,gBACpDrD,OAAA;QAAIuD,SAAS,EAAC,kBAAkB;QAAAF,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1D3D,OAAA;QAAKuD,SAAS,EAAC,WAAW;QAAAF,QAAA,gBACtBrD,OAAA;UAAO4D,OAAO,EAAC,UAAU;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClE3D,OAAA;UACI6D,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACbP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAElD,OAAQ;UACfmD,QAAQ,EAAGC,CAAC,IAAKnD,UAAU,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CI,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEN3D,OAAA;QAAKuD,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACjBrD,OAAA;UAAO4D,OAAO,EAAC,OAAO;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5D3D,OAAA;UAAQ8D,EAAE,EAAC,OAAO;UAACP,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE5D,KAAM;UAAC6D,QAAQ,EAAGC,CAAC,IAAK7D,QAAQ,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,eAC/FrD,OAAA;YAAQ+D,KAAK,EAAC,QAAQ;YAAAV,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEN3D,OAAA;QAAKuD,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACjBrD,OAAA;UAAO4D,OAAO,EAAC,UAAU;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClE3D,OAAA;UAAQ8D,EAAE,EAAC,UAAU;UAACP,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE1D,QAAS;UAAC2D,QAAQ,EAAGC,CAAC,IAAK3D,WAAW,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,EACvGlC,SAAS,CAACiD,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACpBtE,OAAA;YAAoB+D,KAAK,EAAEM,CAAC,CAAChE,QAAS;YAAAgD,QAAA,EAAEgB,CAAC,CAAChE;UAAQ,GAArCiE,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyC,CAC9D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEN3D,OAAA;QAAKuD,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACjBrD,OAAA;UAAO4D,OAAO,EAAC,SAAS;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChE3D,OAAA;UAAQ8D,EAAE,EAAC,SAAS;UAACP,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAExD,OAAQ;UAACyD,QAAQ,EAAGC,CAAC,IAAKzD,UAAU,CAACyD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,EACpGhC,QAAQ,CAAC+C,GAAG,CAAC,CAACG,CAAC,EAAED,KAAK,kBACnBtE,OAAA;YAAoB+D,KAAK,EAAEQ,CAAC,CAACnC,YAAa;YAAAiB,QAAA,EAAEkB,CAAC,CAACnC;UAAY,GAA7CkC,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiD,CACtE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEN3D,OAAA;QAAKuD,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACjBrD,OAAA;UAAO4D,OAAO,EAAC,eAAe;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzE3D,OAAA;UAAQ8D,EAAE,EAAC,eAAe;UAACP,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAEtD,YAAa;UAACuD,QAAQ,EAAGC,CAAC,IAAKvD,eAAe,CAACuD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,EACpH9B,WAAW,CAAC6C,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACtBtE,OAAA;YAAoB+D,KAAK,EAAEM,CAAC,CAACG,eAAgB;YAAAnB,QAAA,EAAEgB,CAAC,CAACG;UAAe,GAAnDF,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuD,CAC5E;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEN3D,OAAA;QAAKuD,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACnCrD,OAAA;UAAO4D,OAAO,EAAC,WAAW;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpE3D,OAAA;UACE8D,EAAE,EAAC,WAAW;UACdP,SAAS,EAAC,aAAa;UACvBQ,KAAK,EAAEpD,QAAS;UAChBqD,QAAQ,EAAGC,CAAC,IAAKrD,WAAW,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,QAAQ;UAAAd,QAAA,gBAERrD,OAAA;YAAQ+D,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAAkB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5C3D,OAAA;YAAQ+D,KAAK,EAAC,qBAAqB;YAAAV,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChE3D,OAAA;YAAQ+D,KAAK,EAAC,qBAAqB;YAAAV,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChE3D,OAAA;YAAQ+D,KAAK,EAAC,eAAe;YAAAV,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpD3D,OAAA;YAAQ+D,KAAK,EAAC,qBAAqB;YAAAV,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChE3D,OAAA;YAAQ+D,KAAK,EAAC,qBAAqB;YAAAV,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChE3D,OAAA;YAAQ+D,KAAK,EAAC,WAAW;YAAAV,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5C3D,OAAA;YAAQ+D,KAAK,EAAC,oBAAoB;YAAAV,QAAA,EAAC;UAAkB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9D3D,OAAA;YAAQ+D,KAAK,EAAC,UAAU;YAAAV,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1C3D,OAAA;YAAQ+D,KAAK,EAAC,iBAAiB;YAAAV,QAAA,EAAC;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxD3D,OAAA;YAAQ+D,KAAK,EAAC,qBAAqB;YAAAV,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChE3D,OAAA;YAAQ+D,KAAK,EAAC,gBAAgB;YAAAV,QAAA,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtD3D,OAAA;YAAQ+D,KAAK,EAAC,WAAW;YAAAV,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGU3D,OAAA;QAAKuD,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACjBrD,OAAA;UAAO4D,OAAO,EAAC,iBAAiB;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChF3D,OAAA;UACI8D,EAAE,EAAC,iBAAiB;UACpBP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAEhD,cAAe;UACtBiD,QAAQ,EAAGC,CAAC,IAAKjD,iBAAiB,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACnDU,IAAI,EAAC;QAAG;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEN3D,OAAA;QAAKuD,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACjBrD,OAAA;UAAO4D,OAAO,EAAC,aAAa;UAACL,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxE3D,OAAA;UACI8D,EAAE,EAAC,aAAa;UAChBP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAE9C,WAAY;UACnB+C,QAAQ,EAAGC,CAAC,IAAK/C,cAAc,CAAC+C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAChDU,IAAI,EAAC;QAAG;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEN3D,OAAA;QAAQ6D,IAAI,EAAC,QAAQ;QAACN,SAAS,EAAC,iBAAiB;QAAAF,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEnB,CAAC;AAACzD,EAAA,CAxNID,OAAO;AAAAyE,EAAA,GAAPzE,OAAO;AA0Nb,eAAeA,OAAO;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}